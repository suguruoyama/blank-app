import React, { useEffect, useMemo, useRef, useState } from "react";

// =============================================================
// AIアバター展示会キオスク（4社セレクター付き）
// 単一ファイルのReactコンポーネント。
// - 4社ボタンで会社を切替
// - 質問→FAQベースの簡易RAGで回答（ローカル・低コスト）
// - Web Speech APIで音声読み上げ（任意）
// - ログのCSVダウンロード
// - フルスクリーンのキオスクモード
// Tailwind前提のスタイル（ChatGPT Canvasでプレビュー可能）
// =============================================================

// ---- ダミーデータ（あとで自由に編集可能） --------------------
const COMPANY_DATA: Record<string, {
  name: string;
  color: string; // アクセント色（Tailwind）
  logoEmoji: string;
  faqs: { q: string; a: string; tags?: string[] }[];
  quick: string[]; // クイック質問
}> = {
  "A": {
    name: "A-Tech Tools",
    color: "from-cyan-500 to-blue-500",
    logoEmoji: "🛠️",
    faqs: [
      { q: "主力製品は？", a: "超硬エンドミル（高耐摩耗グレードVQ）が主力です。ステンレスや合金鋼の高能率加工に強みがあります。" },
      { q: "差別化ポイントは？", a: "二段ギャッシュと不等分割設計により、びびり抑制と切りくず排出性を両立。工具本数削減にも貢献します。" },
      { q: "対応材質は？", a: "SCM、SUS304、析出硬化系、インコネル等まで幅広く対応。推奨切削条件表もご用意しています。" },
      { q: "サンプル提供", a: "展示会限定でデモカッターを少量ご用意。名刺交換で後日発送いたします。" },
    ],
    quick: ["主力製品は？", "差別化ポイントは？", "対応材質は？"],
  },
  "B": {
    name: "B-Met Carbide",
    color: "from-emerald-500 to-teal-500",
    logoEmoji: "🧱",
    faqs: [
      { q: "会社概要", a: "超微粒WC-Co合金の粉末から焼結まで一貫生産。ロット安定性が強みです。" },
      { q: "環境対応", a: "ISO 14001取得、CO2排出原単位を直近3年で18%削減（自社比）。スクラップリサイクル比率も拡大中。" },
      { q: "カスタム対応", a: "少量多品種のブランク供給に対応。外径φ3〜φ25、長さ50〜150mmが標準レンジです。" },
    ],
    quick: ["会社概要", "環境対応", "カスタム対応"],
  },
  "C": {
    name: "C-Drive Systems",
    color: "from-fuchsia-500 to-pink-500",
    logoEmoji: "⚙️",
    faqs: [
      { q: "製品ラインアップ", a: "工具ホルダ、コレット、ShrinkFit装置まで。高把持力と振れ精度2μm以下を実現。" },
      { q: "導入効果", a: "刃先振れ低減で寿命+15〜25%（当社実績）。仕上げ面の安定化に寄与します。" },
      { q: "サポート", a: "現場テクニカルサポートと試作評価の無償トライアルあり（一部条件）。" },
    ],
    quick: ["製品ラインアップ", "導入効果", "サポート"],
  },
  "D": {
    name: "D-Soft Vision",
    color: "from-amber-500 to-orange-500",
    logoEmoji: "🖥️",
    faqs: [
      { q: "ソフトの強み", a: "切削条件最適化AI（オンプレ可）。実測ログから学習し、工具寿命とサイクルタイムを両立。" },
      { q: "連携先", a: "主要CNC（Fanuc/Siemens/Heidenhain）やMESとAPI連携可能。" },
      { q: "価格感", a: "スモールスタートのサブスク月額8万円〜（タグ数・機能で変動）。PoCプランあり。" },
    ],
    quick: ["ソフトの強み", "連携先", "価格感"],
  },
};

// ---- 簡易検索（スコアリング） -------------------------------
function scoreQA(query: string, item: { q: string; a: string; tags?: string[] }) {
  const q = (query || "").toLowerCase();
  const text = [item.q, item.a, ...(item.tags || [])].join(" ").toLowerCase();
  if (!q.trim()) return 0;
  // シンプルなトークン一致＋部分一致
  const tokens = q.split(/[\s、。,.!？?]+/).filter(Boolean);
  let score = 0;
  for (const t of tokens) {
    if (text.includes(t)) score += 2; // 部分一致
    // 完全一致っぽい時に加点（ざっくり）
    const re = new RegExp(`\\b${t.replace(/[.*+?^${}()|[\]\\]/g, "\\$&")}\\b`);
    if (re.test(text)) score += 3;
  }
  // 質問文への一致は少し重み
  const qs = item.q.toLowerCase();
  for (const t of tokens) if (qs.includes(t)) score += 2;
  return score;
}

// ---- CSVユーティリティ ----------------------------------------
function toCSV(rows: string[][]) {
  const esc = (s: string) => '"' + (s ?? "").replaceAll('"', '""') + '"';
  return rows.map(r => r.map(esc).join(",")).join("\n");
}

// ---- 音声合成（Web Speech API） --------------------------------
function speak(text: string, lang = "ja-JP") {
  if (!("speechSynthesis" in window)) return;
  const u = new SpeechSynthesisUtterance(text);
  u.lang = lang;
  u.rate = 1.0;
  u.pitch = 1.0;
  window.speechSynthesis.cancel();
  window.speechSynthesis.speak(u);
}

// ---- メインコンポーネント -------------------------------------
export default function ExpoAIAvatarKiosk() {
  const [companyKey, setCompanyKey] = useState<keyof typeof COMPANY_DATA | null>(null);
  const [input, setInput] = useState("");
  const [muted, setMuted] = useState(false);
  const [messages, setMessages] = useState<{ role: "user" | "assistant"; text: string; company?: string }[]>([
    { role: "assistant", text: "いらっしゃいませ。4社の中から知りたい会社をお選びください。ご質問があれば話しかけてください。" },
  ]);
  const logRef = useRef<string[][]>([["timestamp","role","company","text"]]);

  const activeCompany = companyKey ? COMPANY_DATA[companyKey] : null;

  // フルスクリーン
  const enterFullscreen = () => {
    const el = document.documentElement;
    if (el.requestFullscreen) el.requestFullscreen();
  };

  // 送信処理
  const handleAsk = (question: string) => {
    const q = question.trim();
    if (!q) return;

    const ts = new Date().toISOString();
    setMessages(m => [...m, { role: "user", text: q, company: activeCompany?.name }]);
    logRef.current.push([ts, "user", activeCompany?.name ?? "-", q]);

    // 会社未選択時のガード
    if (!activeCompany) {
      const reply = "まずは画面上部の4社から会社を選んでください。選択後にご質問へ回答します。";
      setMessages(m => [...m, { role: "assistant", text: reply }]);
      logRef.current.push([new Date().toISOString(), "assistant", "-", reply]);
      if (!muted) speak(reply);
      return;
    }

    // 簡易RAG
    const ranked = activeCompany.faqs
      .map(item => ({ item, score: scoreQA(q, item) }))
      .sort((a, b) => b.score - a.score);

    let answer = "";
    if (ranked[0]?.score > 0) {
      answer = ranked[0].item.a;
    } else {
      answer = `そのご質問に近い情報が見つかりませんでした。\n` +
        `・画面下のクイック質問をお試しください\n` +
        `・詳しい仕様は担当スタッフがご案内します`;
    }

    // 会社名・名乗りを軽く付与
    answer = `${activeCompany.logoEmoji} ${activeCompany.name} からのご案内です。\n${answer}`;

    const ats = new Date().toISOString();
    setMessages(m => [...m, { role: "assistant", text: answer, company: activeCompany.name }]);
    logRef.current.push([ats, "assistant", activeCompany.name, answer]);
    if (!muted) speak(answer);
  };

  const handleDownloadCSV = () => {
    const csv = toCSV(logRef.current);
    const blob = new Blob([csv], { type: "text/csv;charset=utf-8" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = `kiosk_logs_${new Date().toISOString().replaceAll(":","-")}.csv`;
    a.click();
    URL.revokeObjectURL(url);
  };

  const handleQuick = (text: string) => {
    setInput(text);
    setTimeout(() => handleAsk(text), 50);
  };

  useEffect(() => {
    // ESCで読み上げ停止
    const onKey = (e: KeyboardEvent) => {
      if (e.key === "Escape") window.speechSynthesis?.cancel();
    };
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, []);

  return (
    <div className="min-h-screen w-full bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 text-white p-4 md:p-6">
      {/* ヘッダー */}
      <header className="flex flex-col md:flex-row items-start md:items-center justify-between gap-4 mb-4">
        <div>
          <h1 className="text-2xl md:text-3xl font-bold">AIアバター展示会キオスク</h1>
          <p className="text-sm text-slate-300">4社から選んで質問すると、アバターが音声と字幕でご案内します。</p>
        </div>
        <div className="flex items-center gap-2">
          <button onClick={enterFullscreen} className="px-3 py-2 rounded-xl bg-slate-700 hover:bg-slate-600 text-sm">フルスクリーン</button>
          <button onClick={() => setMuted(m => !m)} className="px-3 py-2 rounded-xl bg-slate-700 hover:bg-slate-600 text-sm">{muted ? "🔇 ミュート解除" : "🔊 ミュート"}</button>
          <button onClick={handleDownloadCSV} className="px-3 py-2 rounded-xl bg-slate-700 hover:bg-slate-600 text-sm">ログCSV</button>
        </div>
      </header>

      {/* 会社選択 */}
      <section className="grid grid-cols-2 md:grid-cols-4 gap-3 mb-4">
        {(Object.keys(COMPANY_DATA) as (keyof typeof COMPANY_DATA)[]).map((k) => {
          const c = COMPANY_DATA[k];
          const active = companyKey === k;
          return (
            <button
              key={k}
              onClick={() => setCompanyKey(k)}
              className={`relative rounded-2xl p-4 text-left transition shadow-lg ${active ? "ring-2 ring-white scale-[1.01]" : "opacity-95 hover:opacity-100"}`}
              style={{}}
            >
              <div className={`absolute inset-0 rounded-2xl bg-gradient-to-br ${c.color} opacity-80`}></div>
              <div className="relative">
                <div className="text-3xl mb-2">{c.logoEmoji}</div>
                <div className="font-semibold">{c.name}</div>
                <div className="text-xs opacity-90 mt-1">タップして選択</div>
              </div>
            </button>
          );
        })}
      </section>

      {/* 本体：アバター + チャット */}
      <main className="grid grid-cols-1 md:grid-cols-3 gap-4">
        {/* 左：アバター */}
        <div className="md:col-span-1 bg-slate-800/60 rounded-2xl p-4 md:p-6 shadow-xl">
          <div className="flex items-center gap-3 mb-4">
            <div className="text-2xl">{activeCompany?.logoEmoji ?? "🤖"}</div>
            <div>
              <div className="font-semibold">{activeCompany?.name ?? "会社未選択"}</div>
              <div className="text-xs text-slate-300">{activeCompany ? "ご質問にお答えします" : "上のボタンで会社をお選びください"}</div>
            </div>
          </div>

          {/* シンプルなアバター */}
          <div className="relative w-full aspect-[4/3] bg-slate-900 rounded-2xl overflow-hidden grid place-items-center">
            <AvatarFace speaking={messages[messages.length-1]?.role === "assistant"} accent={activeCompany?.color}/>
          </div>

          {/* クイック質問 */}
          <div className="mt-4">
            <div className="text-sm text-slate-300 mb-2">クイック質問</div>
            <div className="flex flex-wrap gap-2">
              {(activeCompany?.quick ?? ["主力製品は？","価格感","サポート"]).map((q, i) => (
                <button key={i} onClick={() => handleQuick(q)} className="px-3 py-1.5 rounded-full bg-slate-700 hover:bg-slate-600 text-xs">{q}</button>
              ))}
            </div>
          </div>
        </div>

        {/* 右：チャット */}
        <div className="md:col-span-2 bg-slate-800/60 rounded-2xl p-4 md:p-6 shadow-xl flex flex-col">
          <div className="flex-1 overflow-y-auto pr-1 space-y-3">
            {messages.map((m, i) => (
              <div key={i} className={`max-w-[90%] md:max-w-[80%] ${m.role === "user" ? "ml-auto" : ""}`}>
                <div className={`rounded-2xl px-4 py-3 text-sm leading-relaxed shadow ${m.role === "user" ? "bg-sky-600/90" : "bg-slate-700/90"}`}>
                  {m.text.split("\n").map((line, li) => <div key={li}>{line}</div>)}
                </div>
                <div className="text-[10px] text-slate-400 mt-1">{m.role === "user" ? "来場者" : "アバター"}{m.company ? `・${m.company}` : ""}</div>
              </div>
            ))}
          </div>

          <div className="mt-3 flex gap-2">
            <input
              className="flex-1 bg-slate-900/70 rounded-xl px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-sky-500"
              placeholder={activeCompany ? `${activeCompany.name} への質問を入力…` : "まず会社を選択してください"}
              value={input}
              onChange={(e) => setInput(e.target.value)}
              onKeyDown={(e) => { if (e.key === "Enter") { handleAsk(input); setInput(""); }}}
            />
            <button onClick={() => { handleAsk(input); setInput(""); }} className="px-4 py-2 rounded-xl bg-sky-600 hover:bg-sky-500 text-sm">送信</button>
          </div>

          <div className="mt-2 text-[11px] text-slate-400">
            ※ 実運用では社別FAQをJSON/CSVから読み込み、必要に応じてAPI（例：OpenAIやRAGサーバ）に切替可能です。
          </div>
        </div>
      </main>

      {/* フッター補足 */}
      <footer className="mt-6 text-xs text-slate-400">
        ・Escキーで音声読み上げを停止できます。・ネット不安定時は本ローカルFAQモードで運用可能。・より高精度が必要ならAPI接続版に差し替えできます。
      </footer>
    </div>
  );
}

function AvatarFace({ speaking, accent }: { speaking: boolean; accent?: string }) {
  return (
    <div className="w-[70%] max-w-[380px]">
      <div className={`rounded-3xl p-4 bg-gradient-to-br ${accent ?? "from-slate-700 to-slate-600"} shadow-2xl`}>
        <div className="relative aspect-square rounded-2xl bg-black/30 grid place-items-center">
          {/* 顔 */}
          <div className="w-40 h-40 rounded-full bg-slate-200 relative">
            {/* 目 */}
            <div className="absolute top-1/3 left-1/4 w-5 h-5 bg-slate-900 rounded-full"/>
            <div className="absolute top-1/3 right-1/4 w-5 h-5 bg-slate-900 rounded-full"/>
            {/* 口 */}
            <div className={`absolute bottom-8 left-1/2 -translate-x-1/2 w-16 h-3 bg-slate-900 rounded-full transition-all ${speaking ? "animate-pulse" : ""}`}/>
          </div>
        </div>
        <div className="mt-3 text-center text-sm opacity-90">AIアバター</div>
      </div>
    </div>
  );
}
